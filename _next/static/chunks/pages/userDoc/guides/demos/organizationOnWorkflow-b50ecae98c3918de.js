(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[414],{8802:function(e){e.exports={reactStrictMode:!0,images:{loader:"akamai",path:"/"},basePath:""}},2067:function(e,s,t){"use strict";t.r(s),t.d(s,{default:function(){return h}});var i=t(9600),n=t(7857),r=t(8802),a=t(5675),o=t.n(a),l=t(5893);function h(){return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(i.Z,{}),(0,l.jsx)("div",{className:"container",children:(0,l.jsxs)("div",{className:"section",children:[(0,l.jsx)("h1",{children:" Workflow Organization"}),(0,l.jsxs)("p",{children:["This part demonstrates the methods in KNIME to clean up workflow and provide better organization on workflow. One example workflow is to filter out the traces, which are started before a arbitrary date. Next, the kept traces after this time are used to discover a Petri Net. To have more visibility in the workflow, the filtering operation is wrapped as node ",(0,l.jsx)("strong",{children:"Preparation"}),"."]}),(0,l.jsx)(o(),{style:{marginBottom:0},src:r.basePath+"/assets/images/organizationOnWorkflow/demo-advanced-wrap-02.png",width:"500px",height:"281px",alt:"demo-simple-discover.png",className:"img-fluid img-shadow"}),(0,l.jsxs)("div",{className:"new-wrapper",children:[(0,l.jsx)(o(),{src:r.basePath+"/assets/images/organizationOnWorkflow/demo-advanced-wrap-wf-02.png",width:"500px",height:"281px",alt:"demo-advanced-wrap-wf-02.png",className:"img-fluid img-shadow"}),(0,l.jsxs)("p",{children:[" ","The workflow before the wrapping is shown in the figure. There are two ways to wrap the nodes, one way is to create MetaNode, another way is to create Component.",(0,l.jsx)("a",{href:"https://docs.knime.com/2019-06/analytics_platform_metanode_guide/index.html",rel:"nofollow",children:"link"}),". Below, both methods are shown. The MetaNode is shown as first."," "]})]}),(0,l.jsxs)("div",{className:"new-wrapper",children:[(0,l.jsx)(o(),{src:r.basePath+"/assets/images/organizationOnWorkflow/Component-open-02.png",width:"500px",height:"281px",alt:"Component-open-02.png",className:"img-fluid img-shadow"}),"This is the same worklflow as component. ",""]}),(0,l.jsxs)("div",{className:"new-wrapper",children:[(0,l.jsx)(o(),{src:r.basePath+"/assets/images/organizationOnWorkflow/MetaNode-design-01.png",width:"500px",height:"281px",alt:"MetaNode-design-01.png",className:"img-fluid img-shadow"}),"This is the same worklflow as a MetaNode. ",""]}),(0,l.jsx)("p",{children:"The following steps show how to wrap the workflow."}),(0,l.jsxs)("ul",{children:[(0,l.jsx)("li",{children:"Create the workflow with all nodes expanded."}),(0,l.jsx)("li",{children:(0,l.jsxs)("p",{children:["Download the dataset ",(0,l.jsx)("code",{children:"chapter_1 "}),"from the"," ",(0,l.jsx)("a",{href:"https://github.com/pm4knime/pm4knime-document/blob/master/dataset/chapter_1.zip",children:"github link"})," ","and extract it to get the event log"," ",(0,l.jsx)("code",{children:"running-example.csv"}),"."]})}),(0,l.jsx)("li",{children:(0,l.jsxs)("p",{children:["Import ",(0,l.jsx)("code",{children:"running-example.csv"})," with node"," ",(0,l.jsx)("strong",{children:"CSV Reader"}),"."]})})]}),(0,l.jsxs)("div",{className:"new-wrapper",children:[(0,l.jsx)(o(),{src:r.basePath+"/assets/images/organizationOnWorkflow/StringInput-configuration-01.png",width:"500px",height:"281px",alt:"StringInput-configuration-01.png",className:"img-fluid img-shadow"}),(0,l.jsxs)("ul",{children:[(0,l.jsx)("li",{children:(0,l.jsxs)("p",{children:["Define a Flow Variable ",(0,l.jsx)("code",{children:"startDateVar"})," in String with node ",(0,l.jsx)("strong",{children:"String Input"}),". This Flow Variable"," ",(0,l.jsx)("code",{children:"startDateVar"})," defines the filtering criteria. After this date, all the events are filtered out.",(0,l.jsx)("br",{})," "]})}),(0,l.jsx)("li",{children:(0,l.jsxs)("p",{children:["Filter the events rows out if its timestamp is before the defined ",(0,l.jsx)("code",{children:"startDateVar"}),"."]})}),(0,l.jsx)("li",{children:(0,l.jsxs)("p",{children:["Drag node ",(0,l.jsx)("strong",{children:"Rule-based Row Splitter"})," into KNIME. This node outputs two Data Tables, one contains rows matching the rule, the other rows are contained in the second Data Table. More information can also be found in the"," ",(0,l.jsx)("a",{href:"https://www.knime.com/knime-introductory-course/chapter3/section4/data-manipulation-numbers-strings-rules",rel:"nofollow",children:"video"}),"."]})})]})]}),(0,l.jsxs)("div",{className:"new-wrapper",children:[(0,l.jsx)(o(),{src:r.basePath+"/assets/images/organizationOnWorkflow/RuleSplitter-configruation-01.png",width:"500px",height:"281px",alt:"RuleSplitter-configuration-01.png",className:"img-fluid img-shadow"}),(0,l.jsxs)("ul",{children:[(0,l.jsx)("li",{children:(0,l.jsxs)("p",{children:["Connect the node ",(0,l.jsx)("strong",{children:"Rule-based Row Splitter"})," with the output port of ",(0,l.jsx)("strong",{children:"String Input"})," and of"," ",(0,l.jsx)("strong",{children:"CSV Reader"}),"."]})}),(0,l.jsx)("li",{children:(0,l.jsxs)("p",{children:["Configure ",(0,l.jsx)("strong",{children:"Rule-based Row Splitter"})," with the following condition."]})}),(0,l.jsx)("li",{children:(0,l.jsx)("blockquote",{children:(0,l.jsxs)("p",{children:["$#Event Attribute#time:timestamp$ >= $$","{SstartDateVar}","$$ => TRUE"]})})})]})]}),(0,l.jsxs)("div",{className:"new-wrapper",children:[(0,l.jsx)(o(),{src:r.basePath+"/assets/images/organizationOnWorkflow/RuleSplitter-result-01.png",width:"500px",height:"281px",alt:"RuleSplitter-result-01.png",className:"img-fluid img-shadow"}),(0,l.jsx)("p",{children:"After the execution, two tables are shown as output. "})]}),(0,l.jsxs)("div",{className:"new-wrapper",children:[(0,l.jsx)(o(),{src:r.basePath+"/assets/images/organizationOnWorkflow/GroupBy-configuration-01.png",width:"500px",height:"281px",alt:"RuleSplitter-configruation-02.png",className:"img-fluid img-shadow"}),(0,l.jsxs)("p",{children:["Extract the caseIDs from the second Data Table which start before the ",(0,l.jsx)("code",{children:"startDateVar"})," by the ",(0,l.jsx)("strong",{children:"GrouBy"})," node."," "]})]}),(0,l.jsxs)("div",{className:"new-wrapper",children:[(0,l.jsx)(o(),{src:r.basePath+"/assets/images/organizationOnWorkflow/GroupBy-result-01.png",width:"500px",height:"281px",alt:"RuleSplitter-configruation-02.png",className:"img-fluid img-shadow"}),(0,l.jsxs)("p",{children:["Filter out the rows with the caseIDs from the result of"," ",(0,l.jsx)("strong",{children:"GroupBy"})," operation."]})]}),(0,l.jsxs)("div",{className:"new-wrapper",children:[(0,l.jsx)(o(),{src:r.basePath+"/assets/images/organizationOnWorkflow/ReferenceRowFilter-configuration-01.png",width:"500px",height:"281px",alt:"ReferenceRowFilter-configuration",className:"img-fluid img-shadow"}),(0,l.jsxs)("ul",{children:[(0,l.jsxs)("li",{children:["Import the node ",(0,l.jsx)("strong",{children:"Reference Row Filter"}),". The configuration is seen on the left"," "]}),(0,l.jsxs)("li",{children:["Execute ",(0,l.jsx)("strong",{children:"Reference Row Filter"})," and get the result"," "]})]})]}),(0,l.jsxs)("div",{className:"new-wrapper",children:[(0,l.jsx)(o(),{src:r.basePath+"/assets/images/organizationOnWorkflow/ReferenceRowFilter-result-01.png",width:"500px",height:"281px",alt:"ReferenceRowFilter-result-01",className:"img-fluid img-shadow"}),(0,l.jsxs)("ul",{children:[(0,l.jsx)("li",{children:"Convert CSV into an event log"}),(0,l.jsxs)("li",{children:["Discover a Petri net with node ",(0,l.jsx)("strong",{children:"Inductive Miner"}),". The settings are"]}),(0,l.jsxs)("li",{children:[" ",(0,l.jsx)("blockquote",{children:(0,l.jsx)("p",{children:"Strategy: Inductive Miner -Infrequent Noise Threshold: 0.2"})})]})]})]}),(0,l.jsxs)("div",{className:"new-wrapper",children:[(0,l.jsx)(o(),{src:r.basePath+"/assets/images/organizationOnWorkflow/MetaNode-design-mata.png",width:"500px",height:"281px",alt:"MetaNode-design-mata.png",className:"img-fluid img-shadow"}),(0,l.jsxs)("ul",{children:[(0,l.jsxs)("li",{children:["Replay the event log on the Petri net with node"," ",(0,l.jsx)("strong",{children:"Alignment-Based Replayer(Default)"}),"."]}),(0,l.jsxs)("li",{children:["Check the fitness with node ",(0,l.jsx)("strong",{children:"Fitness Checker"}),"."]}),(0,l.jsxs)("li",{children:["Wrap the nodes from ",(0,l.jsx)("strong",{children:"CSV Reader"})," to"," ",(0,l.jsx)("strong",{children:"Inductive Miner"})," as the node"," ",(0,l.jsx)("code",{children:"Preparation"}),"."]}),(0,l.jsxs)("li",{children:["Select the related nodes, right click and choose"," ",(0,l.jsx)("code",{children:"Create Metanode"})," "]})]})]}),(0,l.jsxs)("div",{className:"new-wrapper",children:[(0,l.jsx)(o(),{src:r.basePath+"/assets/images/organizationOnWorkflow/MetaNode-configuration-01.png",width:"500px",height:"281px",alt:"MetaNode-configuration-01",className:"img-fluid img-shadow"}),(0,l.jsxs)("ul",{children:[(0,l.jsxs)("li",{children:["After this, it generates the result like this, Its configuration contains no option."," "]}),(0,l.jsxs)("li",{children:["However, in the ",(0,l.jsx)("strong",{children:"MetaNode"}),", the"," ",(0,l.jsx)("code",{children:"startDataVar"})," can't be modified to allow flexible settings. To allow the ",(0,l.jsx)("code",{children:"MetaNode"})," configurable, we use another method ",(0,l.jsx)("strong",{children:"Component"}),"."]})]})]}),(0,l.jsxs)("div",{className:"new-wrapper",children:[(0,l.jsx)(o(),{src:r.basePath+"/assets/images/organizationOnWorkflow/Component-design-component.png",width:"500px",height:"281px",alt:"Component-design-component",className:"img-fluid img-shadow"}),(0,l.jsxs)("p",{children:["Select the related nodes, right click and choose"," ",(0,l.jsx)("code",{children:"Create Component"})," "]})]}),(0,l.jsxs)("div",{className:"new-wrapper",children:[(0,l.jsx)(o(),{src:r.basePath+"/assets/images/organizationOnWorkflow/Component-configuration-withStr.png",width:"500px",height:"281px",alt:"Component-configuration-withStr",className:"img-fluid img-shadow"}),(0,l.jsxs)("p",{children:["After this, it generates the result like this, Its configuration contains option like defined in node ",(0,l.jsx)("strong",{children:"String Input"}),"."," "]})]})]})}),(0,l.jsx)(n.Z,{})]})}},7857:function(e,s,t){"use strict";var i=t(5893);s.Z=function(e){return(0,i.jsx)("footer",{className:"footer",children:(0,i.jsxs)("div",{className:"container",style:{display:"flex",justifyContent:"space-between"},children:[(0,i.jsxs)("span",{className:"text-muted float-left",children:["PM4KNIME is a product of the"," ",(0,i.jsx)("a",{href:"https://fit.fraunhofer.de",target:"_blank",children:"Fraunhofer Institute for Applied Information Technology (FIT)"})]}),(0,i.jsxs)("div",{children:[(0,i.jsx)("a",{className:"float-right",href:"#","data-toggle":"modal","data-target":"#DataProtectionModal",children:"Data Protection"}),(0,i.jsx)("span",{className:"float-right ml-1 mr-1 text-muted",children:"|"}),(0,i.jsx)("a",{className:"float-right",href:"#","data-toggle":"modal","data-target":"#ImprintModal",children:"Imprint"})]})]})})}},9600:function(e,s,t){"use strict";var i=t(9499),n=(t(7294),t(8802)),r=t.n(n),a=t(4593),o=t(1664),l=t.n(o),h=t(634),c=t(9368),d=t(3210),p=t(5893);function g(e,s){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);s&&(i=i.filter((function(s){return Object.getOwnPropertyDescriptor(e,s).enumerable}))),t.push.apply(t,i)}return t}function x(e){for(var s=1;s<arguments.length;s++){var t=null!=arguments[s]?arguments[s]:{};s%2?g(Object(t),!0).forEach((function(s){(0,i.Z)(e,s,t[s])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):g(Object(t)).forEach((function(s){Object.defineProperty(e,s,Object.getOwnPropertyDescriptor(t,s))}))}return e}var m=function(e){var s=e.style;return(0,p.jsxs)(h.Z,{className:"container-fluid color-nav",style:s,children:[(0,p.jsxs)(h.Z.Brand,{children:[(0,p.jsx)("a",{className:"navbar-brand",href:"https://fit.fraunhofer.de",children:(0,p.jsx)("img",{src:r().basePath+"/assets/fit_logo.svg",width:"auto",height:"30",className:"d-inline-block align-top",alt:""})}),(0,p.jsx)(l(),{href:"/",passHref:!0,children:(0,p.jsxs)("a",{className:"navbar-brand pl-4 pr-4",style:{paddingLeft:"15px"},children:[(0,p.jsx)("img",{src:r().basePath+"/assets/pm4knimeLogo.png",width:"auto",height:"30",className:"d-inline-block align-top",alt:"",style:{alignSelf:"left"}}),"PM4KNIME"]})})]}),(0,p.jsx)(h.Z.Toggle,{"aria-controls":"responsive-navbar-nav"}),(0,p.jsxs)(h.Z.Collapse,{id:"responsive-navbar-nav",children:[(0,p.jsx)(c.Z,{children:(0,p.jsxs)(d.Z,{title:"Getting Started",id:"collasible-nav-dropdown",children:[(0,p.jsx)(l(),{href:"/userDoc/guides/installation",passHref:!0,children:(0,p.jsx)(d.Z.Item,{children:"Installation"})}),(0,p.jsx)(l(),{href:"/userDoc/guides/demo",passHref:!0,children:(0,p.jsx)(d.Z.Item,{children:"Demo"})}),(0,p.jsx)(l(),{href:"/userDoc/guides/bugReport",passHref:!0,children:(0,p.jsx)(d.Z.Item,{children:"Bug Report"})})]})}),(0,p.jsx)(c.Z,{children:(0,p.jsxs)(d.Z,{title:"Examples",id:"collasible-nav-dropdown",children:[(0,p.jsx)(l(),{href:"/userDoc/guides/demos/processDiscovery",passHref:!0,children:(0,p.jsx)(d.Z.Item,{children:"Process Discovery"})}),(0,p.jsx)(l(),{href:"/userDoc/guides/demos/conformance",passHref:!0,children:(0,p.jsx)(d.Z.Item,{children:"Conformance Checking"})}),(0,p.jsx)(l(),{href:"/userDoc/guides/demos/logManipulation",passHref:!0,children:(0,p.jsx)(d.Z.Item,{children:"Preprocessing"})}),(0,p.jsx)(d.Z.Divider,{}),(0,p.jsx)(l(),{href:"/userDoc/guides/demos/workflows",passHref:!0,children:(0,p.jsx)(d.Z.Item,{children:"Application to Real-Life Data"})}),(0,p.jsx)(d.Z.Divider,{}),(0,p.jsx)(l(),{href:"/userDoc/guides/demos/workWithPython",passHref:!0,children:(0,p.jsx)(d.Z.Item,{children:"Python Integration"})})]})})]})]})},f=function(){return(0,p.jsxs)(a.q,{children:[(0,p.jsx)("meta",{charSet:"UTF-8"}),(0,p.jsx)("meta",{name:"viewport",content:"width=device-width, initial-scale=1"}),(0,p.jsx)("title",{children:"PM4KNIME"}),(0,p.jsx)("link",{rel:"apple-touch-icon",sizes:"180x180",href:r().basePath+"/assets/pm4knimeLogo.png"}),(0,p.jsx)("link",{rel:"icon",type:"image/png",sizes:"32x32",href:r().basePath+"/assets/pm4knimeLogo.png"}),(0,p.jsx)("link",{rel:"icon",type:"image/png",sizes:"16x16",href:r().basePath+"/assets/pm4knimeLogo.png"}),(0,p.jsx)("meta",{name:"description",content:"PM4KNIME implements state-of-the-art process mining algorithms."}),(0,p.jsx)("meta",{name:"google",content:"notranslate"})]})},j=function(){return(0,p.jsx)(m,{style:x({},{collapseOnSelect:!0,expand:"lg",variant:"light",transition:"top 0.6s",position:"fixed",width:"100%"})})};s.Z=function(e){return(0,p.jsxs)(p.Fragment,{children:[(0,p.jsx)(f,{}),(0,p.jsx)(j,{})]})}},9:function(e,s,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/userDoc/guides/demos/organizationOnWorkflow",function(){return t(2067)}])}},function(e){e.O(0,[917,675,774,888,179],(function(){return s=9,e(e.s=s);var s}));var s=e.O();_N_E=s}]);